def run(data: str):
    numbers = [int(x) for x in data.split(' ')]

    sum_tmp = 0
    max_sum = float('-inf')

    for number in numbers:
        sum_tmp = max(sum_tmp + number, number)
        max_sum = max(sum_tmp, max_sum)

    print(max_sum)


if __name__ == '__main__':
    run('10 71 1 8 13 27 -99 8 26 91 84 85 -21 -54 31 89 24 22 -16 9 -65 -68 43 -48 80 -62 14 86 -55 95 -45 90 43 66 42 95 58 -3 -60 87 16 85 -54 78 -39 -44 77 -29 -90 82 79 -34 53 -54 22 -23 -72 -51 27 -25 -87 -86 -37 30 36 93 -59 13 4 35 -69 -73 -18 -4 92 -50 86 64 90 24 -39 -57 76 -38 -84 88 -63 -4 -57 -36 66 9 69 65 74 2 21 15 -58 -33 -86 -37 66 -25 51 51 84 -44 -47 -28 -9 -37 -42 -97 -87 70 -62 -99 14 48 56 44 -30 -61 68 22 -42 16 21 -10 28 -29 22 22 9 97 -24 1 11 -36 -97 80 -57 70 73 3 -50 65 51 -96 -37 20 -100 -6 11 -31 93 27 6 -72 -7 -32 34 63 44 -80 41 36 -6 -84 -7 37 -10 -50 44 75 1 -1 -34 -35 -28 -8 64 17 -74 -92 -30 -72 -89 -61 -97 48 94 -18 70 35 -54 -21 -74 53 61 14 -29 34 10 26 -71 50 49 35 67 -6 -40 -60 56 -99 3 -83 37 35 49 13 24 -45 -87 45 42 -93 -21 -91 29 -78 -28 13 4 57 -79 -70 -94 0 78 19 -22 -25 -29 8 -12 53 26 69 -69 -72 42 -9 -97 -52 89 -84 21 65 83 -78 -29 39 -95 45 -78 46 36 98 80 -27 -90 -63 56 -71 -66 -51 83 4 -44 88 -20 10 77 0 -20 81 10 -44 67 -95 8 -59 16 56 -52 39 -31 26 -14 41 -83 28 88 58 -82 5 34 73 -87 40 -68 -84 8 95 41 60 61 5 -36 -60 -64 -20 -70 75 64 68 21 99 81 -5 79 -44 -82 15 71 52 21 -81 -18 75 -54 36 -58 -73 72 -8 32 20 -85 -13 77 64 -39 -55 4 36 -3 -87 94 -51 84 34 92 17 61 76 98 92 -77 88 -61 42 -78 -11 94 0 -63 -97 -97 -28 -65 -100 84 -7 18 -86 94 72 -89 -66 -46 7 -76 -68 90 12 43 25 -35 95 -7 40 -4 -74 -52 -66 42 71 -49 -97 -1 -6 -90 22 -87 83 50 -1 99 46 81 -75 81 89 34 31 18 89 -2 -18 56 12 37 -93 78 -5 3 57 -55 -17 -28 -78 21 -93 35 59 -3 1 -81 -93 61 -56 25 18 -86 -32 58 7 -8 16 16 52 -27 69 -53 86 57 -97 44 17 -20 92 -47 15 -26 58 4 74 -47 74 -66 -84 70 -9 20 12 86 -82 92 10 36 95 -36 28 67 19 49 52 60 49 -98 -6 57 1 26 69 90 -90 -56 -44 63 84 -46 18 -19 -1 82 81 -52 35 99 38 -90 -67 80 -16 27 24 47 55 -92 51 -86 4 71 40 -42 -32 65 50 21 76 74 36 46 52 41 46 -53 -32 37 68 3 -76 49 -37 -17 23 20 -58 -59 -34 -37 -12 -53 -89 70 49 46 41 -60 13 -84 -3 -86 -77 64 -26 -13 -72 42 81 -23 -22 -83 -60 -52 89 55 8 -43 34 47 23 9 -45 13 -15 -12 34 81 92 99 5 -73 -77 51 -95 -90 25 -1 -92 -64 -8 -1 -40 88 84 -30 -93 63 81 94 -62 -16 5 66 -7 88 59 10 -22 86 52 -54 50 81 72 -49 94 -12 -58 78 -71 -91 -52 -2 -45 -76 -51 -34 29 -86 -20 71 -100 98 61 -79 21 -43 -42 -83 -49 -85 -80 -79 -17 -55 48 -22 -84 32 -24 19 20 -97 64 -72 -65 -93 10 -31 39 -8 81 -36 6 81 -54 52 -81 51 29 37 -71 -75 26 -86 89 -74 -85 -91 -25 70 -50 96 38 60 -50 97 -67 32 85 14 46 89 -23 59 -66 55 15 1 98 95 -41 -36 -97 38 -10 -6 -24 49 -61 -92 92 1 93 69 -59 84 26 45 31 -51 18 -14 65 -85 91 -60 47 67 80 -67 11 13 -90 -21 11 85 93 99 -30 55 20 -17 -7 76 22 -56 95 8 17 -51 -71 69 70 49 -23 72 -1 88 47 -50 47 8 69 -94 -3 -22 -10 13 -42 -44 91 26 -25 75 28 -66 93 89 -8 46 -56 -61 -51 31 -97 41 42 -39 -98 38 -14 -96 -48 -80 -92 -89 14 -13 -22 -57 54 -18 -50 -40 -43 2 -6 95 -80 -58 78 9 -5 -100 -95 7 -42 -62 -98 56 36 -72 10 19 70 87 -26 -45 66 16 20 6 10 -52 92 62 88 88 -27 0 -54 47 -59 60 59 76 9 -48 -86 0 52 -25 -16 21 7 26 71 31 -10 -30 -72 -61 -72 3 22 -28 99 -54 -92 -57 18 -30 64 1 10 88 87 50 59 93 -23 -78 -60 -34 63 -56 -79 88 41 -34 90 -43 -2 -97 -28 -93 19 37 -62 -13 76 -38 -57 70 82 -18 11 83 -89 18 38 -79 71 -4 92 -94 98 62 39 -23 -50 -90 5 41 -47 -39 71 60 -71 3 -31 -50 11 -29 -83 -85 78 -31 -16 -19 33 -62 77 -78 27 69 -14 -99 -89 -35 -92 56 97 61 -63 66 56 2 17 20 11 50 54 8 -52 -12 9 -1 -21 76 -72 28 -22')
